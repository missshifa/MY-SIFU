const axios = require("axios");
const usersData = require("./usersData.js");

async function getBaseApi() {
  try {
    const res = await axios.get("https://raw.githubusercontent.com/mahmudx7/exe/main/baseApiUrl.json");
    return res.data.mahmud;
  } catch (e) {
    console.error("Base API ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ:", e);
    return null;
  }
}

module.exports.config = {
  name: "quiz",
  version: "2.1.0",
  hasPermssion: 0,
  credits: "SHIFAT",
  description: "Random quiz ‡¶ñ‡ßá‡¶≤‡ßã",
  commandCategory: "game",
  usages: "[en/bn]",
  cooldowns: 5,
  envConfig: {
    rewardCoins: 500,
    rewardExp: 100
  }
};

module.exports.run = async function ({ api, event, args }) {
  try {
    const input = (args[0] || "").toLowerCase();
    const category = input === "en" || input === "english" ? "english" : "bangla";

    const baseApi = await getBaseApi();
    if (!baseApi) {
      return api.sendMessage("‚ùå ‡¶¨‡ßá‡¶∏ API ‡¶≤‡ßã‡¶° ‡¶π‡ßü‡¶®‡¶ø!", event.threadID, event.messageID);
    }

    const res = await axios.get(`${baseApi}/api/quiz?category=${category}`);
    const quiz = res.data;

    if (!quiz) {
      return api.sendMessage("‚ùå ‡¶è‡¶á ‡¶ï‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶ó‡¶∞‡¶ø‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ï‡ßã‡¶®‡ßã Quiz ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø‡•§", event.threadID, event.messageID);
    }

    const { question, correctAnswer, options } = quiz;
    const { a, b, c, d } = options;

    const quizMsg =
      `\n‚ï≠‚îÄ‚îÄ‚ú¶ ${question}\n` +
      `‚îú‚Ä£ ùóî) ${a}\n` +
      `‚îú‚Ä£ ùóï) ${b}\n` +
      `‚îú‚Ä£ ùóñ) ${c}\n` +
      `‚îú‚Ä£ ùóó) ${d}\n` +
      `‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä£\n` +
      `ùêëùêûùê©ùê•ùê≤ ùê∞ùê¢ùê≠ùê° ùê≤ùê®ùêÆùê´ ùêöùêßùê¨ùê∞ùêûùê´.`;

    api.sendMessage(quizMsg, event.threadID, (err, info) => {
      if (err) return console.error(err);

      global.client.handleReply.push({
        name: this.config.name,
        messageID: info.messageID,
        author: event.senderID,
        correctAnswer
      });

      setTimeout(() => {
        api.unsendMessage(info.messageID);
      }, 40000);
    }, event.messageID);

  } catch (error) {
    console.error(error);
    api.sendMessage("‚ùå ‡¶ï‡ßÅ‡¶á‡¶ú ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá, ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßã‡•§", event.threadID, event.messageID);
  }
};

module.exports.handleReply = async function ({ api, event, handleReply }) {
  const { correctAnswer, author, messageID } = handleReply;

  if (event.senderID !== author) {
    return api.sendMessage("‚ùå ‡¶è‡¶á ‡¶ï‡ßÅ‡¶á‡¶ú ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶®‡ßü‡•§", event.threadID, event.messageID);
  }

  await api.unsendMessage(messageID);
  const userAnswer = event.body.trim().toLowerCase();

  const rewardCoins = module.exports.config.envConfig.rewardCoins;
  const rewardExp = module.exports.config.envConfig.rewardExp;

  if (userAnswer === correctAnswer.toLowerCase()) {
    usersData.addCoins(event.senderID, rewardCoins);
    usersData.addExp(event.senderID, rewardExp);

    const user = usersData.get(event.senderID);

    api.sendMessage(
      `‚úÖ ‡¶∏‡¶†‡¶ø‡¶ï ‡¶â‡¶§‡ßç‡¶§‡¶∞!\n‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶™‡ßá‡ßü‡ßá‡¶õ‡ßã ${rewardCoins} ‡¶ï‡ßü‡ßá‡¶® ‡¶è‡¶¨‡¶Ç ${rewardExp} EXP üéâ\n\n‡¶¨‡¶∞‡ßç‡¶§‡¶Æ‡¶æ‡¶® ‡¶¨‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶∏:\nüí∞ ‡¶ï‡ßü‡ßá‡¶®: ${user.coins}\n‚≠ê EXP: ${user.exp}`,
      event.threadID,
      event.messageID
    );
  } else {
    api.sendMessage(
      `‚ùå ‡¶≠‡ßÅ‡¶≤ ‡¶â‡¶§‡ßç‡¶§‡¶∞!\n‡¶∏‡¶†‡¶ø‡¶ï ‡¶â‡¶§‡ßç‡¶§‡¶∞ ‡¶õ‡¶ø‡¶≤: ${correctAnswer}`,
      event.threadID,
      event.messageID
    );
  }
};
