const os = require("os");

const startTime = new Date(); // рж╕рж╛рж░рзНржнрж╛рж░ рж╢рзБрж░рзБ рж╣ржУрзЯрж╛рж░ рж╕ржорзЯ

module.exports = {
  config: {
    name: "uptime",
    version: "1.0.4", // рж╕ржВрж╕рзНржХрж░ржг ржЖржкржбрзЗржЯ ржХрж░рж╛ рж╣рж▓рзЛ
    hasPermission: 0,
    credits: "SHIFAT",
    description: "ржмржЯрзЗрж░ ржЖржкржЯрж╛ржЗржо ржПржмржВ рж╕рж┐рж╕рзНржЯрзЗржорзЗрж░ рждржерзНржп ржжрзЗржЦрзБржиред",
    commandCategory: "box",
    usages: "uptime",
    prefix: "false",
    cooldowns: 5
  },

  run: async function ({ api, event }) {
    try {
      // ржкрзНрж░ржержорзЗ ржПржХржЯрж┐ рж▓рзЛржбрж┐ржВ ржорзЗрж╕рзЗржЬ ржкрж╛ржарж┐рзЯрзЗ рждрж╛рж░ ржЖржЗржбрж┐ ржирзЗржУрзЯрж╛ рж╣рж▓рзЛ
      const messageID = (await api.sendMessage("тП│ | Uptime ржПржмржВ рж╕рж┐рж╕рзНржЯрзЗржорзЗрж░ рждржерзНржп рж▓рзЛржб рж╣ржЪрзНржЫрзЗ...", event.threadID)).messageID;

      // ржПржХржЯрж┐ рж╣рзЗрж▓рзНржкрж╛рж░ ржлрж╛ржВрж╢ржи ржпрж╛ ржорзЗрж╕рзЗржЬ ржПржбрж┐ржЯ ржХрж░ржмрзЗ ржПржмржВ ржХрж┐ржЫрзБржЯрж╛ ржжрзЗрж░рж┐ ржХрж░ржмрзЗ
      const editMessageWithDelay = async (text, delay) => {
        await new Promise(resolve => setTimeout(resolve, delay));
        // ржорзЗрж╕рзЗржЬ ржПржбрж┐ржЯ ржХрж░рж╛рж░ рж╕ржорзЯ ржХрзЛржирзЛ рж╕ржорж╕рзНржпрж╛ рж╣рж▓рзЗ ржпрзЗржи ржХрзНрж░рзНржпрж╛рж╢ ржирж╛ ржХрж░рзЗ
        try {
          await api.editMessage(text, messageID);
        } catch (e) {
          console.error("ржорзЗрж╕рзЗржЬ ржПржбрж┐ржЯ ржХрж░рж╛ рж╕ржорзНржнржм рж╣рзЯржирж┐:", e);
        }
      };

      // ржзрж╛ржк рзз: ржкрзНрж░рж╕рзЗрж╕рж┐ржВ рж╢рзБрж░рзБ
      await editMessageWithDelay("[тЦИтЦСтЦСтЦСтЦСтЦСтЦСтЦСтЦСтЦС] 10%\nржкрзНрж░рж╕рзЗрж╕рж┐ржВ рж╢рзБрж░рзБ рж╣ржЪрзНржЫрзЗ...", 800);

      // ржзрж╛ржк рзи: ржЖржкржЯрж╛ржЗржо ржЧржгржирж╛
      const uptimeInSeconds = Math.floor((new Date() - startTime) / 1000);
      const days = Math.floor(uptimeInSeconds / (3600 * 24));
      const hours = Math.floor((uptimeInSeconds % (3600 * 24)) / 3600);
      const minutes = Math.floor((uptimeInSeconds % 3600) / 60);
      const secondsLeft = uptimeInSeconds % 60;
      const uptimeFormatted = `${days}d ${hours}h ${minutes}m ${secondsLeft}s`;
      await editMessageWithDelay("[тЦИтЦИтЦИтЦСтЦСтЦСтЦСтЦСтЦСтЦС] 30%\nржЖржкржЯрж╛ржЗржо ржЧржгржирж╛ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ...", 800);
      
      // ржзрж╛ржк рзй: ржорзЗржорзЛрж░рж┐рж░ рждржерзНржп рж╕ржВржЧрзНрж░рж╣
      const totalMemoryGB = (os.totalmem() / (1024 * 1024 * 1024)).toFixed(2);
      const freeMemoryGB = (os.freemem() / (1024 * 1024 * 1024)).toFixed(2);
      const usedMemoryGB = (totalMemoryGB - freeMemoryGB).toFixed(2);
      await editMessageWithDelay("[тЦИтЦИтЦИтЦИтЦИтЦИтЦСтЦСтЦСтЦСтЦС] 60%\nржорзЗржорзЛрж░рж┐рж░ рждржерзНржп рж╕ржВржЧрзНрж░рж╣ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ...", 800);

      // ржзрж╛ржк рзк: рж╕ржмржХрж┐ржЫрзБ ржПржХрждрзНрж░рж┐ржд ржХрж░рж╛
      await editMessageWithDelay("[тЦИтЦИтЦИтЦИтЦИтЦИтЦИтЦИтЦИтЦС] 90%\nрж╕ржмржХрж┐ржЫрзБ ржПржХрждрзНрж░рж┐ржд ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ...", 800);

      // ржзрж╛ржк рзл: рж╕ржорзНржкржирзНржи ржорзЗрж╕рзЗржЬ ржжрзЗржЦрж╛ржирзЛ
      await editMessageWithDelay("[тЦИтЦИтЦИтЦИтЦИтЦИтЦИтЦИтЦИтЦИ] 100%\nрж╕ржорзНржкржирзНржи!", 800);

      // ржзрж╛ржк рзм: ржЪрзВрзЬрж╛ржирзНржд ржмрж╛рж░рзНрждрж╛ рждрзИрж░рж┐
      const systemInfo = `
тЩб  тИй_тИй   я╝ИтАЮтАв ╓К тАвтАЮ)тЩб
тХнтФАтИктИктФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтЯб
тФВ ЁЭЧиЁЭЧгЁЭЧзЁЭЧЬЁЭЧаЁЭЧШ ЁЭЧЬЁЭЧбЁЭЧЩЁЭЧв
тФЬтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтЯб
тФВ тП░ ЁЭЧеЁЭЧиЁЭЧбЁЭЧзЁЭЧЬЁЭЧаЁЭЧШ
тФВ ${uptimeFormatted}
тФВ ЁЯТ╗ ЁЭЧаЁЭЧШЁЭЧаЁЭЧвЁЭЧеЁЭЧм
тФВ Total: ${totalMemoryGB} GB
тФВ Free: ${freeMemoryGB} GB
тФВ Used: ${usedMemoryGB} GB
тХ░тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтЯб
`;
      
      // ржЪрзВрзЬрж╛ржирзНржд рждржерзНржп ржжрзЗржЦрж╛ржирзЛрж░ ржЬржирзНржп рж╢рзЗрж╖ржмрж╛рж░ ржорзЗрж╕рзЗржЬ ржПржбрж┐ржЯ ржХрж░рж╛
      await editMessageWithDelay(systemInfo, 500);

    } catch (error) {
      console.error("рж╕рж┐рж╕рзНржЯрзЗржорзЗрж░ рждржерзНржп ржЖржирждрзЗ рж╕ржорж╕рзНржпрж╛ рж╣рзЯрзЗржЫрзЗ:", error);
      api.sendMessage(
        "рж╕рж┐рж╕рзНржЯрзЗржорзЗрж░ рждржерзНржп ржЖржирж╛ рж╕ржорзНржнржм рж╣ржЪрзНржЫрзЗ ржирж╛ред",
        event.threadID,
        event.messageID
      );
    }
  }
};
